{"version":3,"sources":["vue-table.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vue-table.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n    var Vue // late bind\n    var map = Object.create(null)\n    var shimmed = false\n    var isBrowserify = false\n\n    /**\n     * Determine compatibility and apply patch.\n     *\n     * @param {Function} vue\n     * @param {Boolean} browserify\n     */\n\n    exports.install = function (vue, browserify) {\n        if (shimmed) return\n        shimmed = true\n\n        Vue = vue\n        isBrowserify = browserify\n\n        exports.compatible = !!Vue.internalDirectives\n        if (!exports.compatible) {\n            console.warn(\n                '[HMR] vue-loader hot reload is only compatible with ' +\n                'Vue.js 1.0.0+.'\n            )\n            return\n        }\n\n        // patch view directive\n        patchView(Vue.internalDirectives.component)\n        console.log('[HMR] Vue component hot reload shim applied.')\n        // shim router-view if present\n        var routerView = Vue.elementDirective('router-view')\n        if (routerView) {\n            patchView(routerView)\n            console.log('[HMR] vue-router <router-view> hot reload shim applied.')\n        }\n    }\n\n    /**\n     * Shim the view directive (component or router-view).\n     *\n     * @param {Object} View\n     */\n\n    function patchView (View) {\n        var unbuild = View.unbuild\n        View.unbuild = function (defer) {\n            if (!this.hotUpdating) {\n                var prevComponent = this.childVM && this.childVM.constructor\n                removeView(prevComponent, this)\n                // defer = true means we are transitioning to a new\n                // Component. Register this new component to the list.\n                if (defer) {\n                    addView(this.Component, this)\n                }\n            }\n            // call original\n            return unbuild.call(this, defer)\n        }\n    }\n\n    /**\n     * Add a component view to a Component's hot list\n     *\n     * @param {Function} Component\n     * @param {Directive} view - view directive instance\n     */\n\n    function addView (Component, view) {\n        var id = Component && Component.options.hotID\n        if (id) {\n            if (!map[id]) {\n                map[id] = {\n                    Component: Component,\n                    views: [],\n                    instances: []\n                }\n            }\n            map[id].views.push(view)\n        }\n    }\n\n    /**\n     * Remove a component view from a Component's hot list\n     *\n     * @param {Function} Component\n     * @param {Directive} view - view directive instance\n     */\n\n    function removeView (Component, view) {\n        var id = Component && Component.options.hotID\n        if (id) {\n            map[id].views.$remove(view)\n        }\n    }\n\n    /**\n     * Create a record for a hot module, which keeps track of its construcotr,\n     * instnaces and views (component directives or router-views).\n     *\n     * @param {String} id\n     * @param {Object} options\n     */\n\n    exports.createRecord = function (id, options) {\n        if (typeof options === 'function') {\n            options = options.options\n        }\n        if (typeof options.el !== 'string' && typeof options.data !== 'object') {\n            makeOptionsHot(id, options)\n            map[id] = {\n                Component: null,\n                views: [],\n                instances: []\n            }\n        }\n    }\n\n    /**\n     * Make a Component options object hot.\n     *\n     * @param {String} id\n     * @param {Object} options\n     */\n\n    function makeOptionsHot (id, options) {\n        options.hotID = id\n        injectHook(options, 'created', function () {\n            var record = map[id]\n            if (!record.Component) {\n                record.Component = this.constructor\n            }\n            record.instances.push(this)\n        })\n        injectHook(options, 'beforeDestroy', function () {\n            map[id].instances.$remove(this)\n        })\n    }\n\n    /**\n     * Inject a hook to a hot reloadable component so that\n     * we can keep track of it.\n     *\n     * @param {Object} options\n     * @param {String} name\n     * @param {Function} hook\n     */\n\n    function injectHook (options, name, hook) {\n        var existing = options[name]\n        options[name] = existing\n            ? Array.isArray(existing)\n            ? existing.concat(hook)\n            : [existing, hook]\n            : [hook]\n    }\n\n    /**\n     * Update a hot component.\n     *\n     * @param {String} id\n     * @param {Object|null} newOptions\n     * @param {String|null} newTemplate\n     */\n\n    exports.update = function (id, newOptions, newTemplate) {\n        var record = map[id]\n        // force full-reload if an instance of the component is active but is not\n        // managed by a view\n        if (!record || (record.instances.length && !record.views.length)) {\n            console.log('[HMR] Root or manually-mounted instance modified. Full reload may be required.')\n            if (!isBrowserify) {\n                window.location.reload()\n            } else {\n                // browserify-hmr somehow sends incomplete bundle if we reload here\n                return\n            }\n        }\n        if (!isBrowserify) {\n            // browserify-hmr already logs this\n            console.log('[HMR] Updating component: ' + format(id))\n        }\n        var Component = record.Component\n        // update constructor\n        if (newOptions) {\n            // in case the user exports a constructor\n            Component = record.Component = typeof newOptions === 'function'\n                ? newOptions\n                : Vue.extend(newOptions)\n            makeOptionsHot(id, Component.options)\n        }\n        if (newTemplate) {\n            Component.options.template = newTemplate\n        }\n        // handle recursive lookup\n        if (Component.options.name) {\n            Component.options.components[Component.options.name] = Component\n        }\n        // reset constructor cached linker\n        Component.linker = null\n        // reload all views\n        record.views.forEach(function (view) {\n            updateView(view, Component)\n        })\n        // flush devtools\n        if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n            window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush')\n        }\n    }\n\n    /**\n     * Update a component view instance\n     *\n     * @param {Directive} view\n     * @param {Function} Component\n     */\n\n    function updateView (view, Component) {\n        if (!view._bound) {\n            return\n        }\n        view.Component = Component\n        view.hotUpdating = true\n        // disable transitions\n        view.vm._isCompiled = false\n        // save state\n        var state = extractState(view.childVM)\n        // remount, make sure to disable keep-alive\n        var keepAlive = view.keepAlive\n        view.keepAlive = false\n        view.mountComponent()\n        view.keepAlive = keepAlive\n        // restore state\n        restoreState(view.childVM, state, true)\n        // re-eanble transitions\n        view.vm._isCompiled = true\n        view.hotUpdating = false\n    }\n\n    /**\n     * Extract state from a Vue instance.\n     *\n     * @param {Vue} vm\n     * @return {Object}\n     */\n\n    function extractState (vm) {\n        return {\n            cid: vm.constructor.cid,\n            data: vm.$data,\n            children: vm.$children.map(extractState)\n        }\n    }\n\n    /**\n     * Restore state to a reloaded Vue instance.\n     *\n     * @param {Vue} vm\n     * @param {Object} state\n     */\n\n    function restoreState (vm, state, isRoot) {\n        var oldAsyncConfig\n        if (isRoot) {\n            // set Vue into sync mode during state rehydration\n            oldAsyncConfig = Vue.config.async\n            Vue.config.async = false\n        }\n        // actual restore\n        if (isRoot || !vm._props) {\n            vm.$data = state.data\n        } else {\n            Object.keys(state.data).forEach(function (key) {\n                if (!vm._props[key]) {\n                    // for non-root, only restore non-props fields\n                    vm.$data[key] = state.data[key]\n                }\n            })\n        }\n        // verify child consistency\n        var hasSameChildren = vm.$children.every(function (c, i) {\n            return state.children[i] && state.children[i].cid === c.constructor.cid\n        })\n        if (hasSameChildren) {\n            // rehydrate children\n            vm.$children.forEach(function (c, i) {\n                restoreState(c, state.children[i])\n            })\n        }\n        if (isRoot) {\n            Vue.config.async = oldAsyncConfig\n        }\n    }\n\n    function format (id) {\n        var match = id.match(/[^\\/]+\\.vue$/)\n        return match ? match[0] : id\n    }\n\n},{}],2:[function(require,module,exports){\n    var inserted = exports.cache = {}\n\n    exports.insert = function (css) {\n        if (inserted[css]) return\n        inserted[css] = true\n\n        var elem = document.createElement('style')\n        elem.setAttribute('type', 'text/css')\n\n        if ('textContent' in elem) {\n            elem.textContent = css\n        } else {\n            elem.styleSheet.cssText = css\n        }\n\n        document.getElementsByTagName('head')[0].appendChild(elem)\n        return elem\n    }\n\n},{}],3:[function(require,module,exports){\n    var __vueify_insert__ = require(\"vueify/lib/insert-css\")\n    var __vueify_style__ = __vueify_insert__.insert(\"\\n.vuetable th.sortable:hover {\\n  color: #2185d0;\\n  cursor: pointer;\\n}\\n.vuetable-actions {\\n  width: 15%;\\n  padding: 12px 0px;\\n  text-align: center;\\n}\\n.vuetable-pagination {\\n  background: #f9fafb !important;\\n}\\n.vuetable-pagination-info {\\n  margin-top: auto;\\n  margin-bottom: auto;\\n}\\n\")\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        props: {\n            wrapperClass: {\n                type: String,\n                default: function _default() {\n                    return null;\n                }\n            },\n            tableWrapper: {\n                type: String,\n                default: function _default() {\n                    return null;\n                }\n            },\n            tableClass: {\n                type: String,\n                default: function _default() {\n                    return 'ui blue striped selectable celled stackable attached table';\n                }\n            },\n            loadingClass: {\n                type: String,\n                default: function _default() {\n                    return 'loading';\n                }\n            },\n            dataPath: {\n                type: String,\n                default: function _default() {\n                    return 'data';\n                }\n            },\n            paginationPath: {\n                type: String,\n                default: function _default() {\n                    return 'links.pagination';\n                }\n            },\n            fields: {\n                type: Array,\n                required: true\n            },\n            apiUrl: {\n                type: String,\n                required: true\n            },\n            sortOrder: {\n                type: Array,\n                default: function _default() {\n                    return [];\n                }\n            },\n            multiSort: {\n                type: Boolean,\n                default: function _default() {\n                    return false;\n                }\n            },\n            /*\n             * physical key that will trigger multi-sort option\n             * possible values: 'alt', 'ctrl', 'meta', 'shift'\n             * 'ctrl' might not work as expected on Mac\n             */\n            multiSortKey: {\n                type: String,\n                default: 'alt'\n            },\n            perPage: {\n                type: Number,\n                coerce: function coerce(val) {\n                    return parseInt(val);\n                },\n                default: function _default() {\n                    return 10;\n                }\n            },\n            ascendingIcon: {\n                type: String,\n                default: function _default() {\n                    return 'blue chevron up icon';\n                }\n            },\n            descendingIcon: {\n                type: String,\n                default: function _default() {\n                    return 'blue chevron down icon';\n                }\n            },\n            appendParams: {\n                type: Array,\n                default: function _default() {\n                    return [];\n                }\n            },\n            showPagination: {\n                type: Boolean,\n                default: function _default() {\n                    return true;\n                }\n            },\n            paginationComponent: {\n                type: String,\n                default: function _default() {\n                    return 'vuetable-pagination';\n                }\n            },\n            paginationInfoTemplate: {\n                type: String,\n                default: function _default() {\n                    return \"Displaying {from} to {to} of {total} items\";\n                }\n            },\n            paginationInfoNoDataTemplate: {\n                type: String,\n                default: function _default() {\n                    return 'No relevant data';\n                }\n            },\n            paginationClass: {\n                type: String,\n                default: function _default() {\n                    return 'ui bottom attached segment grid';\n                }\n            },\n            paginationInfoClass: {\n                type: String,\n                default: function _default() {\n                    return 'left floated left aligned six wide column';\n                }\n            },\n            paginationComponentClass: {\n                type: String,\n                default: function _default() {\n                    return 'right floated right aligned six wide column';\n                }\n            },\n            paginationConfig: {\n                type: String,\n                default: function _default() {\n                    return 'paginationConfig';\n                }\n            },\n            paginationConfigCallback: {\n                type: String,\n                default: function _default() {\n                    return 'paginationConfig';\n                }\n            },\n            itemActions: {\n                type: Array,\n                default: function _default() {\n                    return [];\n                }\n            },\n            queryParams: {\n                type: Object,\n                default: function _default() {\n                    return {\n                        sort: 'sort',\n                        page: 'page',\n                        perPage: 'per_page'\n                    };\n                }\n            },\n            loadOnStart: {\n                type: Boolean,\n                default: function _default() {\n                    return true;\n                }\n            },\n            selectedTo: {\n                type: Array,\n                default: function _default() {\n                    return [];\n                }\n            },\n            httpData: {\n                type: Object,\n                default: function _default() {\n                    return {};\n                }\n            },\n            httpOptions: {\n                type: Object,\n                default: function _default() {\n                    return {};\n                }\n            },\n            detailRow: {\n                type: String,\n                default: ''\n            },\n            detailRowCallback: {\n                type: String,\n                default: ''\n            },\n            detailRowId: {\n                type: String,\n                default: 'id'\n            },\n            detailRowTransition: {\n                type: String,\n                default: ''\n            },\n            detailRowClass: {\n                type: String,\n                default: 'vuetable-detail-row'\n            },\n            rowClassCallback: {\n                type: String,\n                default: ''\n            }\n        },\n        data: function data() {\n            return {\n                eventPrefix: 'vuetable:',\n                tableData: null,\n                tablePagination: null,\n                currentPage: 1,\n                visibleDetailRows: []\n            };\n        },\n        directives: {\n            'attr': {\n                update: function update(value) {\n                    for (var i in value) {\n                        this.el.setAttribute(i, value[i]);\n                    }\n                }\n            }\n        },\n        computed: {\n            paginationInfo: function paginationInfo() {\n                if (this.tablePagination == null || this.tablePagination.total == 0) {\n                    return this.paginationInfoNoDataTemplate;\n                }\n\n                return this.paginationInfoTemplate.replace('{from}', this.tablePagination.from || 0).replace('{to}', this.tablePagination.to || 0).replace('{total}', this.tablePagination.total || 0);\n            },\n            useDetailRow: function useDetailRow() {\n                if (this.tableData && typeof this.tableData[0][this.detailRowId] === 'undefined') {\n                    console.warn('You need to define \"detail-row-id\" in order for detail-row feature to work!');\n                    return false;\n                }\n\n                return this.detailRowCallback.trim() !== '';\n            }\n        },\n        methods: {\n            normalizeFields: function normalizeFields() {\n                var self = this;\n                var obj;\n                this.fields.forEach(function (field, i) {\n                    if (typeof field === 'string') {\n                        obj = {\n                            name: field,\n                            title: self.setTitle(field),\n                            titleClass: '',\n                            dataClass: '',\n                            callback: null,\n                            visible: true\n                        };\n                    } else {\n                        obj = {\n                            name: field.name,\n                            title: field.title === undefined ? self.setTitle(field.name) : field.title,\n                            sortField: field.sortField,\n                            titleClass: field.titleClass === undefined ? '' : field.titleClass,\n                            dataClass: field.dataClass === undefined ? '' : field.dataClass,\n                            callback: field.callback === undefined ? '' : field.callback,\n                            visible: field.visible === undefined ? true : field.visible\n                        };\n                    }\n                    self.fields.$set(i, obj);\n                });\n            },\n            setTitle: function setTitle(str) {\n                if (this.isSpecialField(str)) {\n                    return '';\n                }\n\n                return this.titleCase(str);\n            },\n            titleCase: function titleCase(str) {\n                return str.replace(/\\w+/g, function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                });\n            },\n            loadData: function loadData() {\n                var self = this;\n\n                var wrapper = document.querySelector(this.tableWrapper);\n                this.showLoadingAnimation(wrapper);\n\n                var url = this.apiUrl + '?' + this.getAllQueryParams();\n                this.$http.get(url, this.httpData, this.httpOptions).then(function (response) {\n                    self.tableData = self.getObjectValue(response.data, self.dataPath, null);\n                    self.tablePagination = self.getObjectValue(response.data, self.paginationPath, null);\n                    if (self.tablePagination === null) {\n                        console.warn('vuetable: pagination-path \"' + self.paginationPath + '\" not found. ' + 'It looks like the data returned from the sever does not have pagination information ' + 'or you may have set it incorrectly.');\n                    }\n\n                    self.$nextTick(function () {\n                        self.dispatchEvent('load-success', response);\n                        self.broadcastEvent('load-success', self.tablePagination);\n\n                        self.hideLoadingAnimation(wrapper);\n                    });\n                }, function (response) {\n                    self.dispatchEvent('load-error', response);\n                    self.broadcastEvent('load-error', response);\n\n                    self.hideLoadingAnimation(wrapper);\n                });\n            },\n            getAllQueryParams: function getAllQueryParams() {\n                var params = [this.queryParams.sort + '=' + this.getSortParam(), this.queryParams.page + '=' + this.currentPage, this.queryParams.perPage + '=' + this.perPage].join('&');\n\n                if (this.appendParams.length > 0) {\n                    params += '&' + this.appendParams.join('&');\n                }\n\n                return params;\n            },\n            showLoadingAnimation: function showLoadingAnimation(wrapper) {\n                if (wrapper !== null) {\n                    this.addClass(wrapper, this.loadingClass);\n                }\n                this.dispatchEvent('loading');\n            },\n            hideLoadingAnimation: function hideLoadingAnimation(wrapper) {\n                if (wrapper !== null) {\n                    this.removeClass(wrapper, this.loadingClass);\n                }\n                this.dispatchEvent('loaded');\n            },\n            getTitle: function getTitle(field) {\n                if (typeof field.title === 'undefined') {\n                    return field.name.replace('.', ' ');\n                }\n                return field.title;\n            },\n            getSortParam: function getSortParam() {\n                if (!this.sortOrder || this.sortOrder.field == '') {\n                    return '';\n                }\n\n                if (typeof this.$parent['getSortParam'] == 'function') {\n                    return this.$parent['getSortParam'].call(this.$parent, this.sortOrder);\n                }\n\n                return this.getDefaultSortParam();\n            },\n            getDefaultSortParam: function getDefaultSortParam() {\n                var result = '';\n\n                for (var i = 0; i < this.sortOrder.length; i++) {\n                    var fieldName = typeof this.sortOrder[i].sortField === 'undefined' ? this.sortOrder[i].field : this.sortOrder[i].sortField;\n\n                    result += fieldName + '|' + this.sortOrder[i].direction + (i + 1 < this.sortOrder.length ? ',' : '');\n                }\n\n                return result;\n            },\n            addClass: function addClass(el, className) {\n                if (el.classList) el.classList.add(className);else el.className += ' ' + className;\n            },\n            removeClass: function removeClass(el, className) {\n                if (el.classList) el.classList.remove(className);else el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n            },\n            dispatchEvent: function dispatchEvent(eventName, args) {\n                this.$dispatch(this.eventPrefix + eventName, args);\n            },\n            broadcastEvent: function broadcastEvent(eventName, args) {\n                this.$broadcast(this.eventPrefix + eventName, args);\n            },\n            orderBy: function orderBy(field, event) {\n                if (!this.isSortable(field)) {\n                    return;\n                }\n\n                var key = this.multiSortKey.toLowerCase() + 'Key';\n\n                if (this.multiSort && event[key]) {\n                    //adding column to multisort\n                    var i = this.currentSortOrder(field);\n\n                    if (i === false) {\n                        //this field is not in the sort array yet\n                        this.sortOrder.push({\n                            field: field.name,\n                            direction: 'asc'\n                        });\n                    } else {\n                        //this field is in the sort array, now we change its state\n                        if (this.sortOrder[i].direction == 'asc') {\n                            // switch direction\n                            this.sortOrder[i].direction = 'desc';\n                        } else {\n                            //remove sort condition\n                            this.sortOrder.splice(i, 1);\n                        }\n                    }\n                } else {\n                    //no multisort, or resetting sort\n                    if (this.sortOrder.length == 0) {\n                        this.sortOrder.push({\n                            field: '',\n                            direction: 'asc'\n                        });\n                    }\n\n                    this.sortOrder.splice(1); //removes additional columns\n\n                    if (this.sortOrder[0].field == field.name) {\n                        // change sort direction\n                        this.sortOrder[0].direction = this.sortOrder[0].direction == 'asc' ? 'desc' : 'asc';\n                    } else {\n                        // reset sort direction\n                        this.sortOrder[0].direction = 'asc';\n                    }\n                    this.sortOrder[0].field = field.name;\n                    this.sortOrder[0].sortField = field.sortField;\n                }\n\n                this.currentPage = 1; // reset page index\n                this.loadData();\n            },\n            isSortable: function isSortable(field) {\n                return !(typeof field.sortField == 'undefined');\n            },\n            isCurrentSortField: function isCurrentSortField(field) {\n                return this.currentSortOrder(field) !== false;\n            },\n            currentSortOrder: function currentSortOrder(field) {\n                if (!this.isSortable(field)) {\n                    return false;\n                }\n\n                for (var i = 0; i < this.sortOrder.length; i++) {\n                    if (this.sortOrder[i].field == field.name) {\n                        return i;\n                    }\n                }\n\n                return false;\n            },\n            sortIcon: function sortIcon(field) {\n                var i = this.currentSortOrder(field);\n                if (i !== false) {\n                    return this.sortOrder[i].direction == 'asc' ? this.ascendingIcon : this.descendingIcon;\n                } else {\n                    return '';\n                }\n            },\n            sortIconOpacity: function sortIconOpacity(field) {\n                //fields with stronger precedence have darker color\n\n                //if there are few fields, we go down by 0.3\n                //ex. 2 fields are selected: 1.0, 0.7\n\n                //if there are more we go down evenly on the given spectrum\n                //ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\n\n                var max = 1.0;\n                var min = 0.3;\n                var step = 0.3;\n\n                var count = this.sortOrder.length;\n                var current = this.currentSortOrder(field);\n\n                if (max - count * step < min) {\n                    step = (max - min) / (count - 1);\n                }\n\n                var opacity = max - current * step;\n\n                return opacity;\n            },\n            gotoPreviousPage: function gotoPreviousPage() {\n                if (this.currentPage > 1) {\n                    this.currentPage--;\n                    this.loadData();\n                }\n            },\n            gotoNextPage: function gotoNextPage() {\n                if (this.currentPage < this.tablePagination.last_page) {\n                    this.currentPage++;\n                    this.loadData();\n                }\n            },\n            gotoPage: function gotoPage(page) {\n                if (page != this.currentPage && page > 0 && page <= this.tablePagination.last_page) {\n                    this.currentPage = page;\n                    this.loadData();\n                }\n            },\n            isSpecialField: function isSpecialField(fieldName) {\n                // return fieldName.startsWith('__')\n                return fieldName.slice(0, 2) === '__';\n            },\n            hasCallback: function hasCallback(item) {\n                return item.callback ? true : false;\n            },\n            callCallback: function callCallback(field, item) {\n                if (!this.hasCallback(field)) return;\n\n                var args = field.callback.split('|');\n                var func = args.shift();\n\n                if (typeof this.$parent[func] == 'function') {\n                    return args.length > 0 ? this.$parent[func].apply(this.$parent, [this.getObjectValue(item, field.name)].concat(args)) : this.$parent[func].call(this.$parent, this.getObjectValue(item, field.name));\n                }\n\n                return null;\n            },\n            getObjectValue: function getObjectValue(object, path, defaultValue) {\n                defaultValue = typeof defaultValue == 'undefined' ? null : defaultValue;\n\n                var obj = object;\n                if (path.trim() != '') {\n                    var keys = path.split('.');\n                    keys.forEach(function (key) {\n                        if (obj !== null && typeof obj[key] != 'undefined' && obj[key] !== null) {\n                            obj = obj[key];\n                        } else {\n                            obj = defaultValue;\n                            return;\n                        }\n                    });\n                }\n                return obj;\n            },\n            callAction: function callAction(action, data) {\n                this.$dispatch(this.eventPrefix + 'action', action, data);\n            },\n            addParam: function addParam(param) {\n                this.appendParams.push(param);\n            },\n            toggleCheckbox: function toggleCheckbox(isChecked, dataItem, fieldName) {\n                var idColumn = this.extractArgs(fieldName);\n                if (idColumn === undefined) {\n                    console.warn('You did not provide reference id column with \"__checkbox:<column_name>\" field!');\n                    return;\n                }\n                if (isChecked) {\n                    this.selectedTo.push(dataItem[idColumn]);\n                } else {\n                    this.selectedTo.$remove(dataItem[idColumn]);\n                }\n            },\n            toggleAllCheckboxes: function toggleAllCheckboxes(isChecked, fieldName) {\n                var self = this;\n                var idColumn = this.extractArgs(fieldName);\n\n                if (isChecked) {\n                    this.tableData.forEach(function (dataItem) {\n                        if (!self.isSelectedRow(dataItem, fieldName)) {\n                            self.selectedTo.push(dataItem[idColumn]);\n                        }\n                    });\n                } else {\n                    this.tableData.forEach(function (dataItem) {\n                        self.selectedTo.$remove(dataItem[idColumn]);\n                    });\n                }\n            },\n            isSelectedRow: function isSelectedRow(dataItem, fieldName) {\n                return this.selectedTo.indexOf(dataItem[this.extractArgs(fieldName)]) >= 0;\n            },\n            extractName: function extractName(string) {\n                return string.split(':')[0].trim();\n            },\n            extractArgs: function extractArgs(string) {\n                return string.split(':')[1];\n            },\n            callDetailRowCallback: function callDetailRowCallback(item) {\n                var func = this.detailRowCallback.trim();\n                if (func === '') {\n                    return '';\n                }\n\n                if (typeof this.$parent[func] == 'function') {\n                    return this.$parent[func].call(this.$parent, item);\n                } else {\n                    console.error('Function \"' + func + '()\" does not exist!');\n                }\n            },\n            isVisibleDetailRow: function isVisibleDetailRow(rowId) {\n                return this.visibleDetailRows.indexOf(rowId) >= 0;\n            },\n            showDetailRow: function showDetailRow(rowId) {\n                if (!this.isVisibleDetailRow(rowId)) {\n                    this.visibleDetailRows.push(rowId);\n                }\n            },\n            hideDetailRow: function hideDetailRow(rowId) {\n                if (this.isVisibleDetailRow(rowId)) {\n                    this.visibleDetailRows.$remove(rowId);\n                }\n            },\n            toggleDetailRow: function toggleDetailRow(rowId) {\n                if (this.isVisibleDetailRow(rowId)) {\n                    this.hideDetailRow(rowId);\n                } else {\n                    this.showDetailRow(rowId);\n                }\n            },\n            onRowClass: function onRowClass(dataItem, index) {\n                var func = this.rowClassCallback.trim();\n\n                if (func !== '' && typeof this.$parent[func] === 'function') {\n                    return this.$parent[func].call(this.$parent, dataItem, index);\n                }\n                return '';\n            },\n            onRowChanged: function onRowChanged(dataItem) {\n                this.dispatchEvent('row-changed', dataItem);\n                return true;\n            },\n            onRowClicked: function onRowClicked(dataItem, event) {\n                this.$dispatch(this.eventPrefix + 'row-clicked', dataItem, event);\n                return true;\n            },\n            onCellClicked: function onCellClicked(dataItem, field, event) {\n                this.$dispatch(this.eventPrefix + 'cell-clicked', dataItem, field, event);\n            },\n            onCellDoubleClicked: function onCellDoubleClicked(dataItem, field, event) {\n                this.$dispatch(this.eventPrefix + 'cell-dblclicked', dataItem, field, event);\n            },\n            onDetailRowClick: function onDetailRowClick(dataItem, event) {\n                this.$dispatch(this.eventPrefix + 'detail-row-clicked', dataItem, event);\n            },\n            callPaginationConfig: function callPaginationConfig() {\n                if (typeof this.$parent[this.paginationConfigCallback] === 'function') {\n                    this.$parent[this.paginationConfigCallback].call(this.$parent, this.$refs.pagination.$options.name);\n                }\n            },\n            logDeprecatedMessage: function logDeprecatedMessage(name, replacer) {\n                var msg = '\"{name}\" prop is being deprecated and will be removed in the future. Please use \"{replacer}\" instead.';\n                console.warn(msg.replace('{name}', name).replace('{replacer}', replacer));\n            },\n            checkForDeprecatedProps: function checkForDeprecatedProps() {\n                if (this.paginationConfig !== 'paginationConfig') {\n                    this.logDeprecatedMessage('paginationConfig', 'paginationConfigCallback');\n                }\n                if (this.detailRow !== '') {\n                    this.logDeprecatedMessage('detail-row', 'detail-row-callback');\n                }\n            }\n        },\n        watch: {\n            'multiSort': function multiSort(newVal, oldVal) {\n                if (newVal === false && this.sortOrder.length > 1) {\n                    this.sortOrder.splice(1);\n                    this.loadData();\n                }\n            }\n        },\n        events: {\n            'vuetable-pagination:change-page': function vuetablePaginationChangePage(page) {\n                if (page == 'prev') {\n                    this.gotoPreviousPage();\n                } else if (page == 'next') {\n                    this.gotoNextPage();\n                } else {\n                    this.gotoPage(page);\n                }\n            },\n            'vuetable:reload': function vuetableReload() {\n                this.loadData();\n            },\n            'vuetable:refresh': function vuetableRefresh() {\n                this.currentPage = 1;\n                this.loadData();\n            },\n            'vuetable:goto-page': function vuetableGotoPage(page) {\n                this.$emit('vuetable-pagination:change-page', page);\n            },\n            'vuetable:set-options': function vuetableSetOptions(options) {\n                for (var n in options) {\n                    this.$set(n, options[n]);\n                }\n            },\n            'vuetable:toggle-detail': function vuetableToggleDetail(dataItem) {\n                this.toggleDetailRow(dataItem);\n            },\n            'vuetable:show-detail': function vuetableShowDetail(dataItem) {\n                this.showDetailRow(dataItem);\n            },\n            'vuetable:hide-detail': function vuetableHideDetail(dataItem) {\n                this.hideDetailRow(dataItem);\n            }\n        },\n        created: function created() {\n            this.checkForDeprecatedProps();\n            this.normalizeFields();\n            if (this.loadOnStart) {\n                this.loadData();\n            }\n            this.$nextTick(function () {\n                this.callPaginationConfig();\n            });\n        }\n    };\n    if (module.exports.__esModule) module.exports = module.exports.default\n    ;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"{{wrapperClass}}\\\">\\n    <table class=\\\"vuetable {{tableClass}}\\\">\\n        <thead>\\n            <tr>\\n                <template v-for=\\\"field in fields\\\">\\n                    <template v-if=\\\"field.visible\\\">\\n                        <template v-if=\\\"isSpecialField(field.name)\\\">\\n                            <th v-if=\\\"extractName(field.name) == '__checkbox'\\\" class=\\\"{{field.titleClass || ''}}\\\">\\n                                <input type=\\\"checkbox\\\" @change=\\\"toggleAllCheckboxes($event.target.checked, field.name)\\\">\\n                            </th>\\n                            <th v-else=\\\"\\\" id=\\\"{{field.name}}\\\" class=\\\"{{field.titleClass || ''}}\\\">\\n                                {{field.title || ''}}\\n                            </th>\\n                        </template>\\n                        <template v-else=\\\"\\\">\\n                            <th @click=\\\"orderBy(field, $event)\\\" id=\\\"_{{field.name}}\\\" class=\\\"{{field.titleClass || ''}} {{isSortable(field) ? 'sortable' : ''}}\\\">\\n                                {{getTitle(field) | capitalize}}&nbsp;\\n                                <i v-if=\\\"isCurrentSortField(field)\\\" class=\\\"{{ sortIcon(field) }}\\\" v-bind:style=\\\"{opacity: sortIconOpacity(field)}\\\"></i>\\n                            </th>\\n                        </template>\\n                    </template>\\n                </template>\\n            </tr>\\n        </thead>\\n        <tbody v-cloak=\\\"\\\">\\n            <template v-for=\\\"(itemNumber, item) in tableData\\\">\\n                <tr @click=\\\"onRowClicked(item, $event)\\\" :render=\\\"onRowChanged(item)\\\" :class=\\\"onRowClass(item, itemNumber)\\\">\\n                    <template v-for=\\\"field in fields\\\">\\n                        <template v-if=\\\"field.visible\\\">\\n                            <template v-if=\\\"isSpecialField(field.name)\\\">\\n                                <td v-if=\\\"extractName(field.name) == '__sequence'\\\" class=\\\"vuetable-sequence {{field.dataClass}}\\\" v-html=\\\"tablePagination.from + itemNumber\\\">\\n                                </td>\\n                                <td v-if=\\\"extractName(field.name) == '__checkbox'\\\" class=\\\"vuetable-checkboxes {{field.dataClass}}\\\">\\n                                    <input type=\\\"checkbox\\\" @change=\\\"toggleCheckbox($event.target.checked, item, field.name)\\\" :checked=\\\"isSelectedRow(item, field.name)\\\">\\n                                </td>\\n                                <td v-if=\\\"field.name == '__actions'\\\" class=\\\"vuetable-actions {{field.dataClass}}\\\">\\n                                    <template v-for=\\\"action in itemActions\\\">\\n                                        <button class=\\\"{{ action.class }}\\\" @click=\\\"callAction(action.name, item)\\\" v-attr=\\\"action.extra\\\">\\n                                            <i class=\\\"{{ action.icon }}\\\"></i> {{ action.label }}\\n                                        </button>\\n                                    </template>\\n                                </td>\\n                                <td v-if=\\\"extractName(field.name) == '__component'\\\" class=\\\"{{field.dataClass}}\\\">\\n                                    <component :is=\\\"extractArgs(field.name)\\\" :row-data=\\\"item\\\"></component>\\n                                </td>\\n                            </template>\\n                            <template v-else=\\\"\\\">\\n                                <td v-if=\\\"hasCallback(field)\\\" class=\\\"{{field.dataClass}}\\\" @click=\\\"onCellClicked(item, field, $event)\\\" @dblclick=\\\"onCellDoubleClicked(item, field, $event)\\\">\\n                                    {{{ callCallback(field, item) }}}\\n                                </td>\\n                                <td v-else=\\\"\\\" class=\\\"{{field.dataClass}}\\\" @click=\\\"onCellClicked(item, field, $event)\\\" @dblclick=\\\"onCellDoubleClicked(item, field, $event)\\\">\\n                                    {{{ getObjectValue(item, field.name, \\\"\\\") }}}\\n                                </td>\\n                            </template>\\n                        </template>\\n                    </template>\\n                </tr>\\n                <template v-if=\\\"useDetailRow\\\">\\n                    <tr v-if=\\\"isVisibleDetailRow(item[detailRowId])\\\" v-html=\\\"callDetailRowCallback(item)\\\" @click=\\\"onDetailRowClick(item, $event)\\\" :transition=\\\"detailRowTransition\\\" class=\\\"{{detailRowClass}}\\\"></tr>\\n                </template>\\n            </template>\\n        </tbody>\\n    </table>\\n    <div v-if=\\\"showPagination\\\" class=\\\"vuetable-pagination {{paginationClass}}\\\">\\n        <div class=\\\"vuetable-pagination-info {{paginationInfoClass}}\\\" v-html=\\\"paginationInfo\\\">\\n        </div>\\n        <div v-show=\\\"tablePagination &amp;&amp; tablePagination.last_page > 1\\\" class=\\\"vuetable-pagination-component {{paginationComponentClass}}\\\">\\n            <component v-ref:pagination=\\\"\\\" :is=\\\"paginationComponent\\\"></component>\\n        </div>\\n    </div>\\n</div>\\n\"\n    if (module.hot) {(function () {  module.hot.accept()\n        var hotAPI = require(\"vue-hot-reload-api\")\n        hotAPI.install(require(\"vue\"), true)\n        if (!hotAPI.compatible) return\n        module.hot.dispose(function () {\n            __vueify_insert__.cache[\"\\n.vuetable th.sortable:hover {\\n  color: #2185d0;\\n  cursor: pointer;\\n}\\n.vuetable-actions {\\n  width: 15%;\\n  padding: 12px 0px;\\n  text-align: center;\\n}\\n.vuetable-pagination {\\n  background: #f9fafb !important;\\n}\\n.vuetable-pagination-info {\\n  margin-top: auto;\\n  margin-bottom: auto;\\n}\\n\"] = false\n            document.head.removeChild(__vueify_style__)\n        })\n        if (!module.hot.data) {\n            hotAPI.createRecord(\"_v-3563622c\", module.exports)\n        } else {\n            hotAPI.update(\"_v-3563622c\", module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n        }\n    })()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":1,\"vueify/lib/insert-css\":2}],4:[function(require,module,exports){\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _VuetablePaginationMixin = require('./VuetablePaginationMixin.vue');\n\n    var _VuetablePaginationMixin2 = _interopRequireDefault(_VuetablePaginationMixin);\n\n    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n    exports.default = {\n        mixins: [_VuetablePaginationMixin2.default]\n    };\n    if (module.exports.__esModule) module.exports = module.exports.default\n    ;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"{{wrapperClass}}\\\">\\n    <a @click=\\\"loadPage(1)\\\" class=\\\"btn-nav {{linkClass}} {{isOnFirstPage ? disabledClass : ''}}\\\">\\n            <i v-if=\\\"icons.first != ''\\\" class=\\\"{{icons.first}}\\\"></i>\\n            <span v-else=\\\"\\\">«</span>\\n    </a>\\n    <a @click=\\\"loadPage('prev')\\\" class=\\\"btn-nav {{linkClass}} {{isOnFirstPage ? disabledClass : ''}}\\\">\\n            <i v-if=\\\"icons.next != ''\\\" class=\\\"{{icons.prev}}\\\"></i>\\n            <span v-else=\\\"\\\">&nbsp;‹</span>\\n    </a>\\n    <template v-if=\\\"notEnoughPages\\\">\\n        <template v-for=\\\"n in totalPage\\\">\\n            <a @click=\\\"loadPage(n+1)\\\" class=\\\"{{pageClass}} {{isCurrentPage(n+1) ? activeClass : ''}}\\\">\\n                    {{ n+1 }}\\n            </a>\\n        </template>\\n    </template>\\n    <template v-else=\\\"\\\">\\n       <template v-for=\\\"n in windowSize\\\">\\n           <a @click=\\\"loadPage(windowStart+n)\\\" class=\\\"{{pageClass}} {{isCurrentPage(windowStart+n) ? activeClass : ''}}\\\">\\n                {{ windowStart+n }}\\n           </a>\\n       </template>\\n    </template>\\n    <a @click=\\\"loadPage('next')\\\" class=\\\"btn-nav {{linkClass}} {{isOnLastPage ? disabledClass : ''}}\\\">\\n        <i v-if=\\\"icons.next != ''\\\" class=\\\"{{icons.next}}\\\"></i>\\n        <span v-else=\\\"\\\">›&nbsp;</span>\\n    </a>\\n    <a @click=\\\"loadPage(totalPage)\\\" class=\\\"btn-nav {{linkClass}} {{isOnLastPage ? disabledClass : ''}}\\\">\\n        <i v-if=\\\"icons.last != ''\\\" class=\\\"{{icons.last}}\\\"></i>\\n        <span v-else=\\\"\\\">»</span>\\n    </a>\\n</div>\\n\"\n    if (module.hot) {(function () {  module.hot.accept()\n        var hotAPI = require(\"vue-hot-reload-api\")\n        hotAPI.install(require(\"vue\"), true)\n        if (!hotAPI.compatible) return\n        if (!module.hot.data) {\n            hotAPI.createRecord(\"_v-3d729fe6\", module.exports)\n        } else {\n            hotAPI.update(\"_v-3d729fe6\", module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n        }\n    })()}\n},{\"./VuetablePaginationMixin.vue\":6,\"vue\":\"vue\",\"vue-hot-reload-api\":1}],5:[function(require,module,exports){\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _VuetablePaginationMixin = require('./VuetablePaginationMixin.vue');\n\n    var _VuetablePaginationMixin2 = _interopRequireDefault(_VuetablePaginationMixin);\n\n    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n    exports.default = {\n        mixins: [_VuetablePaginationMixin2.default],\n        props: {\n            'dropdownClass': {\n                type: String,\n                default: function _default() {\n                    return 'ui search dropdown';\n                }\n            },\n            'pageText': {\n                type: String,\n                default: function _default() {\n                    return 'Page';\n                }\n            }\n        },\n        methods: {\n            loadPage: function loadPage(page) {\n                // update dropdown value\n                if (page == 'prev' && !this.isOnFirstPage) {\n                    this.setDropdownToPage(this.tablePagination.current_page - 1);\n                } else if (page == 'next' && !this.isOnLastPage) {\n                    this.setDropdownToPage(this.tablePagination.current_page + 1);\n                }\n\n                this.$dispatch('vuetable-pagination:change-page', page);\n            },\n            setDropdownToPage: function setDropdownToPage(page) {\n                this.$nextTick(function () {\n                    document.getElementById('vuetable-pagination-dropdown').value = page;\n                });\n            },\n            selectPage: function selectPage(event) {\n                this.$dispatch('vuetable-pagination:change-page', event.target.selectedIndex + 1);\n            }\n        },\n        events: {\n            'vuetable:load-success': function vuetableLoadSuccess(tablePagination) {\n                this.tablePagination = tablePagination;\n                this.setDropdownToPage(tablePagination.current_page);\n            }\n        }\n    };\n    if (module.exports.__esModule) module.exports = module.exports.default\n    ;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"{{wrapperClass}}\\\">\\n    <a @click=\\\"loadPage('prev')\\\" class=\\\"{{linkClass}} {{isOnFirstPage ? disabledClass : ''}}\\\">\\n        <i :class=\\\"icons.prev\\\"></i>\\n    </a>\\n    <select id=\\\"vuetable-pagination-dropdown\\\" class=\\\"{{dropdownClass}}\\\" @change=\\\"selectPage($event)\\\">\\n        <template v-for=\\\"n in totalPage\\\">\\n            <option class=\\\"{{pageClass}}\\\" value=\\\"{{n+1}}\\\">\\n                {{pageText}} {{n+1}}\\n            </option>\\n        </template>\\n    </select>\\n    <a @click=\\\"loadPage('next')\\\" class=\\\"{{linkClass}} {{isOnLastPage ? disabledClass : ''}}\\\">\\n        <i :class=\\\"icons.next\\\"></i>\\n    </a>\\n</div>\\n\"\n    if (module.hot) {(function () {  module.hot.accept()\n        var hotAPI = require(\"vue-hot-reload-api\")\n        hotAPI.install(require(\"vue\"), true)\n        if (!hotAPI.compatible) return\n        if (!module.hot.data) {\n            hotAPI.createRecord(\"_v-9c70ccd2\", module.exports)\n        } else {\n            hotAPI.update(\"_v-9c70ccd2\", module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n        }\n    })()}\n},{\"./VuetablePaginationMixin.vue\":6,\"vue\":\"vue\",\"vue-hot-reload-api\":1}],6:[function(require,module,exports){\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        props: {\n            'wrapperClass': {\n                type: String,\n                default: function _default() {\n                    return 'ui right floated pagination menu';\n                }\n            },\n            'activeClass': {\n                type: String,\n                default: function _default() {\n                    return 'active large';\n                }\n            },\n            'disabledClass': {\n                type: String,\n                default: function _default() {\n                    return 'disabled';\n                }\n            },\n            'pageClass': {\n                type: String,\n                default: function _default() {\n                    return 'item';\n                }\n            },\n            'linkClass': {\n                type: String,\n                default: function _default() {\n                    return 'icon item';\n                }\n            },\n            'icons': {\n                type: Object,\n                default: function _default() {\n                    return {\n                        first: 'angle double left icon',\n                        prev: 'left chevron icon',\n                        next: 'right chevron icon',\n                        last: 'angle double right icon'\n                    };\n                }\n            },\n            'onEachSide': {\n                type: Number,\n                coerce: function coerce(value) {\n                    return parseInt(value);\n                },\n                default: function _default() {\n                    return 2;\n                }\n            }\n        },\n        data: function data() {\n            return {\n                tablePagination: null\n            };\n        },\n        computed: {\n            totalPage: function totalPage() {\n                return this.tablePagination == null ? 0 : this.tablePagination.last_page;\n            },\n            isOnFirstPage: function isOnFirstPage() {\n                return this.tablePagination == null ? false : this.tablePagination.current_page == 1;\n            },\n            isOnLastPage: function isOnLastPage() {\n                return this.tablePagination == null ? false : this.tablePagination.current_page == this.tablePagination.last_page;\n            },\n            notEnoughPages: function notEnoughPages() {\n                return this.totalPage < this.onEachSide * 2 + 4;\n            },\n            windowSize: function windowSize() {\n                return this.onEachSide * 2 + 1;\n            },\n            windowStart: function windowStart() {\n                if (!this.tablePagination || this.tablePagination.current_page <= this.onEachSide) {\n                    return 1;\n                } else if (this.tablePagination.current_page >= this.totalPage - this.onEachSide) {\n                    return this.totalPage - this.onEachSide * 2;\n                }\n\n                return this.tablePagination.current_page - this.onEachSide;\n            }\n        },\n        methods: {\n            loadPage: function loadPage(page) {\n                this.$dispatch('vuetable-pagination:change-page', page);\n            },\n            isCurrentPage: function isCurrentPage(page) {\n                return page == this.tablePagination.current_page;\n            }\n        },\n        events: {\n            'vuetable:load-success': function vuetableLoadSuccess(tablePagination) {\n                this.tablePagination = tablePagination;\n            },\n            'vuetable-pagination:set-options': function vuetablePaginationSetOptions(options) {\n                for (var n in options) {\n                    this.$set(n, options[n]);\n                }\n            }\n        }\n    };\n    if (module.exports.__esModule) module.exports = module.exports.default\n    if (module.hot) {(function () {  module.hot.accept()\n        var hotAPI = require(\"vue-hot-reload-api\")\n        hotAPI.install(require(\"vue\"), true)\n        if (!hotAPI.compatible) return\n        if (!module.hot.data) {\n            hotAPI.createRecord(\"_v-e34f2c2a\", module.exports)\n        } else {\n            hotAPI.update(\"_v-e34f2c2a\", module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n        }\n    })()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":1}],7:[function(require,module,exports){\n    Vue.component('vuetable-pagination', require('./components/VuetablePagination.vue'));\n\n    Vue.component('vuetable-pagination-dropdown', require('./components/VuetablePaginationDropdown.vue'));\n\n    Vue.component('vuetable', require('./components/Vuetable.vue'));\n},{\"./components/Vuetable.vue\":3,\"./components/VuetablePagination.vue\":4,\"./components/VuetablePaginationDropdown.vue\":5}]},{},[7]);"],"sourceRoot":"/source/"}