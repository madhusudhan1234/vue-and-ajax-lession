{"version":3,"sources":["task.js"],"names":[],"mappingsfile":"task.js","sourcesContent":["Vue.http.headers.common['X-CSRF-TOKEN'] = $(\"#token\").attr(\"value\");\n\nnew Vue({\n\n    el: '#tasks',\n\n    data: {\n        tasks: [],\n        pagination: {\n            total: 0,\n            per_page: 2,\n            from: 1,\n            to: 0,\n            current_page: 1\n        },\n        offset: 4,\n        formErrors:{},\n        formErrorsUpdate:{},\n        newTask : {'body':''},\n        fillTask : {'body':'','id':''}\n    },\n\n    computed: {\n        isActived: function () {\n            return this.pagination.current_page;\n        },\n        pagesNumber: function () {\n            if (!this.pagination.to) {\n                return [];\n            }\n            var from = this.pagination.current_page - this.offset;\n            if (from < 1) {\n                from = 1;\n            }\n            var to = from + (this.offset * 2);\n            if (to >= this.pagination.last_page) {\n                to = this.pagination.last_page;\n            }\n            var pagesArray = [];\n            while (from <= to) {\n                pagesArray.push(from);\n                from++;\n            }\n            return pagesArray;\n        }\n    },\n\n    ready : function(){\n        this.getVueItems(this.pagination.current_page);\n    },\n\n    methods : {\n\n        getVueItems: function(page){\n            this.$http.get('/api/tasks?page='+page).then((response) => {\n                this.$set('tasks', response.data.data.data);\n            this.$set('pagination', response.data.pagination);\n        });\n        },\n\n        createTask: function(){\n            var input = this.newTask;\n            this.$http.post('/tasks',input).then((response) => {\n                this.changePage(this.pagination.current_page);\n            this.newTask = {'body':''};\n            $(\"#create-task\").modal('hide');\n            toastr.success('Task Created Successfully.', 'Success Alert', {timeOut: 5000});\n        }, (response) => {\n                this.formErrors = response.data;\n            });\n        },\n\n        deleteTask: function(task){\n            this.$http.delete('/tasks/'+task.id).then((response) => {\n                this.changePage(this.pagination.current_page);\n            toastr.success('Task Deleted Successfully.', 'Success Alert', {timeOut: 5000});\n        });\n        },\n\n        editTask: function(task){\n            this.fillTask.id = task.id;\n            this.fillTask.body = task.body;\n            $(\"#edit-task\").modal('show');\n        },\n\n        updateTask: function(id){\n            var input = this.fillTask;\n            this.$http.put('/tasks/'+id,input).then((response) => {\n                this.changePage(this.pagination.current_page);\n            this.fillTask = {'body':'','id':''};\n            $(\"#edit-task\").modal('hide');\n            toastr.success('Task Updated Successfully.', 'Success Alert', {timeOut: 5000});\n        }, (response) => {\n                this.formErrorsUpdate = response.data;\n            });\n        },\n\n        changePage: function (page) {\n            this.pagination.current_page = page;\n            this.getVueItems(page);\n        }\n\n    }\n\n});\n"],"sourceRoot":"/source/"}